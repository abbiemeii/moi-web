// MIXINS
// large desktop
@mixin lg {
    @media screen and (max-width: $lg-max) {
        @content;
    }
}
// desktop
@mixin md {
    @media screen and (max-width: $md-max) {
        @content;
    }
}

// tablet
@mixin sm {
    @media screen and (max-width: $sm-max) {
        @content;
    }
}
// mobile
@mixin xs {
    @media screen and (max-width: $xs-max) {
        @content;
    }
}
// small mobile
@mixin xxs {
    @media (max-width: $xxs-max) {
        @content;
    }
}

@mixin maxH($args) {
    @media (max-height: $args) {
        @content;
    }
}

@mixin mobile {
    @media only screen and (max-width: $mobile-rotate) {
        @content;
    }
}

@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }
    @keyframes #{$animation-name} {
        @content;
    }
}

@mixin animation($str) {
    animation: #{$str};
    -webkit-animation: #{$str};
    -moz-animation: #{$str};
    -ms-animation: #{$str};
    -o-animation: #{$str};
}
@mixin transform($args) {
    transform: $args;
    -webkit-transform: $args;
    -moz-transform: $args;
    -ms-transform: $args;
    -o-transform: $args;
}

@mixin transform-origin($args) {
    transform-origin: $args;
    -webkit-transform-origin: $args;
    -moz-transform-origin: $args;
    -ms-transform-origin: $args;
    -o-transform-origin: $args;
}
@mixin transition-delay($args) {
    transition-delay: $args;
    -webkit-transition-delay: $args;
    -moz-transition-delay: $args;
    -ms-transition-delay: $args;
    -o-transition-delay: $args;
}

@mixin transition($args) {
    transition: $args;
    -webkit-transition: $args;
    -moz-transition: $args;
    -ms-transition: $args;
    -o-transition: $args;
}
@mixin text(
    $font-size,
    $line-height,
    $color,
    $text-transform: none,
    $letter-spacing: normal,
    $font-family: $font-main
) {
    font-size: $font-size;
    line-height: $line-height;
    color: $color;
    text-transform: $text-transform;
    letter-spacing: $letter-spacing;
    font-family: $font-family;
}

@mixin font-size($sizeValue: 1.6) {
    font-size: ($sizeValue * 10) + "px";
    font-size: $sizeValue + "rem";
}

@mixin mid($flex: false) {
    @if $flex == false {
        top: 50%;
        left: 50%;
        @include transform(translate(-50%, -50%));
        position: absolute;
    } @else {
        display: flex;
        align-items: center;
        justify-content: center;
    }
}

@mixin abCenter($direction: "left") {
    position: absolute;
    @if $direction == "left" {
        left: 50%;
        transform: translateX(-50%);
    }
    @if $direction == "top" {
        top: 50%;
        transform: translateY(-50%);
    }
}

@mixin midImg($maxwidth: initial) {
    max-width: $maxwidth;
    min-width: 100%;
    min-height: 100%;
    object-fit: cover;
    @include mid;
}

@mixin fullScreen($fixed: false) {
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    @if $fixed {
        position: fixed;
    } @else {
        position: absolute;
    }
}

@mixin overlay($alpha: 0.2) {
    background-color: rgba(0, 0, 0, $alpha);
}
@mixin visible($param: 1) {
    @if $param == 1 {
        opacity: 1;
        pointer-events: auto;
        visibility: visible;
    } @else {
        opacity: 0;
        pointer-events: none;
        visibility: hidden;
    }
}
@mixin br($radius) {
    -webkit-border-radius: $radius;
    border-radius: $radius;
    background-clip: padding-box;
}

@mixin overtext($lines) {
    display: -webkit-inline-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    text-overflow: ellipsis;
    overflow: hidden;
}

@mixin customscroll($width: 5px, $bgTrack: #000, $bgThumb: #ddd) {
    &::-webkit-scrollbar {
        width: $width;
    }
    &::-webkit-scrollbar-track {
        background: $bgTrack;
    }
    &::-webkit-scrollbar-thumb {
        background: $bgThumb;
    }
}

@mixin flex($justify: flex-start, $align: stretch, $direction: row, $wrap: nowrap) {
    display: flex;
    justify-content: $justify;
    align-items: $align;
    flex-direction: $direction;
    flex-wrap: $wrap;
}

@mixin size($width, $height: $width) {
    width: $width;
    height: $height;
}

@mixin bgImage($position: center, $norepeat: no-repeat, $size: cover) {
    background-repeat: $norepeat;
    background-position: $position;
    background-size: $size;
}
